[{"categories":null,"content":"WhyI have a Ender-3 3D printer, I want to be able to turn it off when its finished printing without splicing my power cable and using a RaspberryPi’s GPIO to cut power. I decided to do it with software and a SmartPlug. I don’t really want some unknown IoT device on my network, so I want to flash it an OpenSource firmware. Not to mention the OpenSource Firmware (Tasmota) integrates with my OctoPrint Setup. ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:1:0","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#why"},{"categories":null,"content":"My DeviceThis is the plug I brought: here in case the listing is removed here are the details: Name: Smart Plug,Smart Wifi Plug Compatible with Alexa, Google Home, Wifi Plug with Timer Function App Remote Control, No Hub Required, 2.4Ghz ONLY (Energy Monitoring) (1Pack) Seller: OHMAXX EAN: 0638457638929 UPC: 638457638929 Part No: KU11 The amazon listing\" The amazon listing The box\" The box The back of the plug\" The back of the plug ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:2:0","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#my-device"},{"categories":null,"content":"ChecksWhen I got the plug, there was a leaflet telling me to install “Gosund” app on my smartphone, this is good news because that means its almost certainty a Tuya device. The leaflet\" The leaflet ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:3:0","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#checks"},{"categories":null,"content":"FlashingThis is my documentation on how I managed to flash the firmware on my Plug. This is from box to flash. I did not want the plug to pick up an OTA update and blocking my ability to flash it. (Imagine saying that in the early 2000’s) ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:4:0","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#flashing"},{"categories":null,"content":"Tools The SmartPlug Raspberry Pi 4 (Ethernet) Mobile Phone (Android) ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:4:1","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#tools"},{"categories":null,"content":"Process From my PC I ssh’d into my raspberry pi (Via the Ethernet adapter). To Docker or Not to Docker I tried following the guide for setting it up in Docker containers but I had no luck. The network SSID never appeared. cd /tmp/ git clone https://github.com/ct-Open-Source/tuya-convert cd tuya-convert ./install_prereq.sh ./start_flash.sh This brought up a warning with the usual “Don’t sue me” etc. I skipped this by typing yes. It also prompted me if I wanted to kill dnsmasq, mosquitto. I said yes It then asked me to connect my phone or another device to vtrust-flash. I did this via my Samsung A53 I then plugged in the smart plug, the power light was flashing blue. I assume this is it in pairing mode. I then pressed Enter and it seemed to find the smart plug.. or so I thought: ====================================================== Starting smart config pairing procedure Waiting for the device to install the intermediate firmware Put device in EZ config mode (blinking fast) Sending SSID vtrust-flash Sending wifiPassword Sending token 00000000 Sending secret 0101 .... SmartConfig complete. Resending SmartConfig Packets ................. SmartConfig complete. Resending SmartConfig Packets ............ Timed out while waiting for the device to (re)connect ====================================================== Attempting to diagnose the issue... No ESP82xx based devices connected according to your wifi log. Here is a list of all the MAC addresses that connected: \u003cPhone Mac Address\u003e If you see your IoT device in this list, it is not an ESP82xx based device. Otherwise, another issue may be preventing it from connecting. For additional information, check the *.log files inside the scripts folder. Please include these logs when opening a new issue on our GitHub issue tracker. ====================================================== Do you want to try flashing another device? [y/N] z ====================================================== Cleaning up... Closing AP Exiting... This seems to just be seeing my Phone. It seems I had to hold the power button for a few seconds and it started flashing even faster. Now the flash was successful ====================================================== Starting smart config pairing procedure Waiting for the device to install the intermediate firmware Put device in EZ config mode (blinking fast) Sending SSID vtrust-flash Sending wifiPassword Sending token 00000000 Sending secret 0101 ................ SmartConfig complete. Resending SmartConfig Packets ................................................................................................ IoT-device is online with ip 10.42.42.42 Fetching firmware backup % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1024k 100 1024k 0 0 65712 0 0:00:15 0:00:15 --:--:-- 31304 ====================================================== Getting Info from IoT-device VTRUST-FLASH 1.5 (c) VTRUST GMBH https://www.vtrust.de/35c3/ READ FLASH: http://10.42.42.42/backup ChipID: 40f806 MAC: \u003cREDACTED\u003e BootVersion: 7 BootMode: normal FlashMode: 1M DOUT @ 40MHz FlashChipId: 144051 FlashChipRealSize: 1024K Active Userspace: user2 0x81000 ====================================================== Ready to flash third party firmware! For your convenience, the following firmware images are already included in this repository: Tasmota v8.1.0.2 (wifiman) ESPurna 1.13.5 (base) You can also provide your own image by placing it in the /files directory Please ensure the firmware fits the device and includes the bootloader MAXIMUM SIZE IS 512KB Available options: 0) return to stock 1) flash espurna.bin 2) flash tasmota.bin q) quit; do nothing Please select 0-2: Save Time Finding The Plug If you are like me and have lots of devices on your network, save the MAC so you can find its IP once you get it connected on your home network. I chose option 2 as I wanted the tasmota firmware Post Firmware Flash Config I again connect to the tasmota-xxxx ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:4:2","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#process"},{"categories":null,"content":"Process From my PC I ssh’d into my raspberry pi (Via the Ethernet adapter). To Docker or Not to Docker I tried following the guide for setting it up in Docker containers but I had no luck. The network SSID never appeared. cd /tmp/ git clone https://github.com/ct-Open-Source/tuya-convert cd tuya-convert ./install_prereq.sh ./start_flash.sh This brought up a warning with the usual “Don’t sue me” etc. I skipped this by typing yes. It also prompted me if I wanted to kill dnsmasq, mosquitto. I said yes It then asked me to connect my phone or another device to vtrust-flash. I did this via my Samsung A53 I then plugged in the smart plug, the power light was flashing blue. I assume this is it in pairing mode. I then pressed Enter and it seemed to find the smart plug.. or so I thought: ====================================================== Starting smart config pairing procedure Waiting for the device to install the intermediate firmware Put device in EZ config mode (blinking fast) Sending SSID vtrust-flash Sending wifiPassword Sending token 00000000 Sending secret 0101 .... SmartConfig complete. Resending SmartConfig Packets ................. SmartConfig complete. Resending SmartConfig Packets ............ Timed out while waiting for the device to (re)connect ====================================================== Attempting to diagnose the issue... No ESP82xx based devices connected according to your wifi log. Here is a list of all the MAC addresses that connected: If you see your IoT device in this list, it is not an ESP82xx based device. Otherwise, another issue may be preventing it from connecting. For additional information, check the *.log files inside the scripts folder. Please include these logs when opening a new issue on our GitHub issue tracker. ====================================================== Do you want to try flashing another device? [y/N] z ====================================================== Cleaning up... Closing AP Exiting... This seems to just be seeing my Phone. It seems I had to hold the power button for a few seconds and it started flashing even faster. Now the flash was successful ====================================================== Starting smart config pairing procedure Waiting for the device to install the intermediate firmware Put device in EZ config mode (blinking fast) Sending SSID vtrust-flash Sending wifiPassword Sending token 00000000 Sending secret 0101 ................ SmartConfig complete. Resending SmartConfig Packets ................................................................................................ IoT-device is online with ip 10.42.42.42 Fetching firmware backup % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1024k 100 1024k 0 0 65712 0 0:00:15 0:00:15 --:--:-- 31304 ====================================================== Getting Info from IoT-device VTRUST-FLASH 1.5 (c) VTRUST GMBH https://www.vtrust.de/35c3/ READ FLASH: http://10.42.42.42/backup ChipID: 40f806 MAC: BootVersion: 7 BootMode: normal FlashMode: 1M DOUT @ 40MHz FlashChipId: 144051 FlashChipRealSize: 1024K Active Userspace: user2 0x81000 ====================================================== Ready to flash third party firmware! For your convenience, the following firmware images are already included in this repository: Tasmota v8.1.0.2 (wifiman) ESPurna 1.13.5 (base) You can also provide your own image by placing it in the /files directory Please ensure the firmware fits the device and includes the bootloader MAXIMUM SIZE IS 512KB Available options: 0) return to stock 1) flash espurna.bin 2) flash tasmota.bin q) quit; do nothing Please select 0-2: Save Time Finding The Plug If you are like me and have lots of devices on your network, save the MAC so you can find its IP once you get it connected on your home network. I chose option 2 as I wanted the tasmota firmware Post Firmware Flash Config I again connect to the tasmota-xxxx ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:4:2","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#post-firmware-flash-config"},{"categories":null,"content":"References Sam on Amazon Tasmota Info on Tuya Github guide on Tuya-Convert Front Page Picture ","date":"07-09-2022","objectID":"/flashing_wifi_plug/:0:0","series":null,"tags":null,"title":"Flashing Tasmota On Smart Plugs Via Tuya-Convert","uri":"/flashing_wifi_plug/#references"},{"categories":null,"content":"As a DevOps Engineer, I like being able to create quick and simple CLI’s to automate toil. After lots of playing around with python dependency management, cli library’s I think I have found a nice combination. This is the stack: click The cli library poetry The dependency management pytest who does not love writing tests precommit - Sane checking before we commit ","date":"02-08-2022","objectID":"/click_project_setup/:0:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#"},{"categories":null,"content":"PoetryI have used lots of dependency managers in my time, and I have recently started to use poetry and it takes all the hassle out of everything. To install it go here and run the command. ","date":"02-08-2022","objectID":"/click_project_setup/:1:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#poetry"},{"categories":null,"content":"Starting A ProjectNow we have poetry installed we can create the base for our project: poetry new --name hello --src helloworld This will create a helloworld dir, with the following contents: helloworld ├── README.rst ├── pyproject.toml ├── src │ └── hello │ └── __init__.py └── tests ├── __init__.py └── test_hello.py ","date":"02-08-2022","objectID":"/click_project_setup/:2:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#starting-a-project"},{"categories":null,"content":"Adding DependenciesSince we know we are going to be using click \u0026 lets tell poetry to add it: cd helloworld poetry add click ","date":"02-08-2022","objectID":"/click_project_setup/:2:1","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#adding-dependencies"},{"categories":null,"content":"Adding an Entry PointBack in the day we would use a setup.py file to do this, but again poetry does all the hard work for us. We need to add a tool.poetry.scripts setting to our pyproject.toml [tool.poetry.scripts] hello = \"src.hello.main:cli\" hello = The name of the cli when we run it. src.hello. = The name of the package main = The name of the module cli = The name of the function ","date":"02-08-2022","objectID":"/click_project_setup/:2:2","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#adding-an-entry-point"},{"categories":null,"content":"Adding the codeSince we do not have any of the code needed above, poetry cannot / will not run our cli. Lets fix that, add the following code to src/hello/main.py Here is the link to the Gist ","date":"02-08-2022","objectID":"/click_project_setup/:2:3","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#adding-the-code"},{"categories":null,"content":"Running the scriptNow if we run poetry run hello we should see this: Usage: hello [OPTIONS] COMMAND [ARGS]... Run the cli Options: -v, --verbose Enable verbose output --help Show this message and exit. Commands: say This greets you. Or this poetry run hello say --string foo --repeat 4: Hello foo! Hello foo! Hello foo! Hello foo! ","date":"02-08-2022","objectID":"/click_project_setup/:3:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#running-the-script"},{"categories":null,"content":"Saving to GitNow that we have the boiler plate setup, its a good time to commit to git. git init git add * git commit -m \"First commit\" git branch -M main git remote add origin \u003cyour git url\u003e git push -u origin main ","date":"02-08-2022","objectID":"/click_project_setup/:4:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#saving-to-git"},{"categories":null,"content":"Pre-commit HooksAdd it as a dependency: poetry add pre-commit pylint Don’t forget to update git! git add poetry.lock pyproject.toml git commit -m \"Add pre-commit dependency.\" This is my basic .pre-commit-config.yaml file: repos:- repo:https://github.com/pre-commit/pre-commit-hooksrev:v2.5.0hooks:- id:check-added-large-files- repo:localhooks:- id:pylintname:pylintentry:poetry run pylint src/language:systemalways_run:truepass_filenames:false We need to init the hooks: poetry run pre-commit install Once we have init’d the pre-commit hooks will run when we commit code. For more info on pre-commit click here ","date":"02-08-2022","objectID":"/click_project_setup/:4:1","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#pre-commit-hooks"},{"categories":null,"content":"Uploading the packageLets say you have built your cli tool and want to upload it to PyPi! We should really test it before pushing to the prod PyPi right? ","date":"02-08-2022","objectID":"/click_project_setup/:5:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#uploading-the-package"},{"categories":null,"content":"Testing UploadFirst lets configure poetry so its aware of the test PyPi repo: poetry config repositories.testpypi https://test.pypi.org/legacy/ Create an account on TestPyPI and then create a new API key under your account settings. Once you have the key: poetry config http-basic.testpypi __token__ \u003cAPI KEY\u003e To upload you run: poetry build poetry publish -r testpypi Tip You can add dist to your .gitignore file ","date":"02-08-2022","objectID":"/click_project_setup/:5:1","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#testing-upload"},{"categories":null,"content":"References How to create a Python package in 2022 - Rodrigo Girão Serrão Build and Test a Command Line Interface with Python, Poetry, Click, and pytest - Jonathan Bowman Banner ","date":"02-08-2022","objectID":"/click_project_setup/:0:0","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#references"},{"categories":null,"content":"Real Upload Configure PyPI Get your API key for PyPi poetry config pypi-token.pypi \u003cAPI KEY\u003e poetry publish --build ","date":"02-08-2022","objectID":"/click_project_setup/:0:1","series":null,"tags":["click","poetry"],"title":"How to Create a Python CLI Package In 2022","uri":"/click_project_setup/#real-upload"},{"categories":null,"content":"Hello! This is my Tech blog, where I am to write about techy things. To follow tradition I will be writing hello world in various languages I am competent in. One day I hope to add more languages. ","date":"22-04-2022","objectID":"/hello-world/:0:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#"},{"categories":null,"content":"Python print(\"Hello World\") ","date":"22-04-2022","objectID":"/hello-world/:1:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#python"},{"categories":null,"content":"Go import fmt package main func main() { fmt.Println(\"Hello World\") } ","date":"22-04-2022","objectID":"/hello-world/:2:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#go"},{"categories":null,"content":"Bash echo \"Hello World\" ","date":"22-04-2022","objectID":"/hello-world/:3:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#bash"},{"categories":null,"content":"Powershell Write-Host \"Hello World\" ","date":"22-04-2022","objectID":"/hello-world/:4:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#powershell"},{"categories":null,"content":"C++ #include \u003ciostream\u003e int main() { std::cout \u003c\u003c \"Hello World!\"; return 0; } ","date":"22-04-2022","objectID":"/hello-world/:5:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#c"},{"categories":null,"content":"References Banner ","date":"22-04-2022","objectID":"/hello-world/:0:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#references"},{"categories":null,"content":"AboutHello I am Karl W (Ktasper) You have found my site of what I think passes for a DevOps engineer / SRE’s daily life. Have a good dig around this site; explore the random snippets of code, posts, links and other stuff. If you find something you don’t like, then close your browser and or your internet connection. ","date":"01-01-0001","objectID":"/about/:0:0","series":null,"tags":null,"title":"About","uri":"/about/#about"},{"categories":null,"content":"Theme LicenseDoIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css autocomplete.js Lunr.js algoliasearch Fuse.js lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine Waline Twikoo Vssue cookieconsent Pjax Topbar Remark42 ","date":"01-01-0001","objectID":"/about/:0:0","series":null,"tags":null,"title":"About","uri":"/about/#theme-license"},{"categories":null,"content":"My Digital LibraryHere is my digital library, you can see what I have read and roughly when I have read it. I use a script ","date":"01-01-0001","objectID":"/library/:0:0","series":null,"tags":null,"title":"Library","uri":"/library/#my-digital-library"},{"categories":null,"content":"Books","date":"01-01-0001","objectID":"/library/:0:0","series":null,"tags":null,"title":"Library","uri":"/library/#books"},{"categories":null,"content":"Factual Freakonomics Astrophysics for People in a Hurry Prisoners of Geography This is Going to Hurt: Secret Diaries of a Junior Doctor Sapiens: A Brief History of Humankind The History of the SAS The End is Always Near: Apocalyptic Moments, from the Bronze Age Collapse to Nuclear Near Misses ","date":"01-01-0001","objectID":"/library/:1:0","series":null,"tags":null,"title":"Library","uri":"/library/#factual"},{"categories":null,"content":"Fiction 1984 Animal Farm Fahrenheit 451 The Long Walk World War Z: An Oral History of the Zombie War ","date":"01-01-0001","objectID":"/library/:2:0","series":null,"tags":null,"title":"Library","uri":"/library/#fiction"},{"categories":null,"content":"Non Fiction Bravo Two Zero First Man In Always Managing A man walks onto a pitch ","date":"01-01-0001","objectID":"/library/:3:0","series":null,"tags":null,"title":"Library","uri":"/library/#non-fiction"}]